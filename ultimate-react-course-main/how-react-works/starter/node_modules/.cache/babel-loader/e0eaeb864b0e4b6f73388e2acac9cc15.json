{"ast":null,"code":"var _jsxFileName = \"/Users/evanduru/Library/Mobile Documents/com~apple~CloudDocs/jonas_udemy_react_course_2024/ultimate-react-course-main/how-react-works/starter/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// Importing the useState hook from React for state management within components.\nimport { useState } from \"react\"; // Sample content to be used within the tabbed interface.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst content = [{\n  summary: \"React is a library for building UIs\",\n  details: \"Dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n}, {\n  summary: \"State management is like giving state a home\",\n  details: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n}, {\n  summary: \"We can think of props as the component API\",\n  details: \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\"\n}];\n/**\n * App component serves as the root component for the tabbed application.\n * It renders the Tabbed component and passes the content as props.\n */\n\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tabbed, {\n      content: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n/**\n * Tabbed component responsible for rendering the tabs and the content.\n * @param {Object[]} content - Array of objects containing summary and details for each tab.\n */\n\n_c = App;\n\nfunction Tabbed(_ref) {\n  _s();\n\n  let {\n    content\n  } = _ref;\n  const [activeTab, setActiveTab] = useState(0); // State to track the active tab.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: content.map((_, idx) => /*#__PURE__*/_jsxDEV(Tab, {\n        num: idx,\n        activeTab: activeTab,\n        onClick: setActiveTab\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), activeTab <= 2 ? /*#__PURE__*/_jsxDEV(TabContent, {\n      item: content[activeTab]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DifferentContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n/**\n * Tab component rendering individual tabs.\n * @param {number} num - The index of the tab.\n * @param {number} activeTab - Index of the currently active tab.\n * @param {Function} onClick - Handler to set the active tab.\n */\n\n\n_s(Tabbed, \"9RTnV4k8xQ8Z7mmUeyiKoXdA+A8=\");\n\n_c2 = Tabbed;\n\nfunction Tab(_ref2) {\n  let {\n    num,\n    activeTab,\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: activeTab === num ? \"tab active\" : \"tab\",\n    onClick: () => onClick(num),\n    children: [\"Tab \", num + 1]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n/**\n * TabContent component renders the content of a tab.\n * @param {Object} item - The content item containing summary and details.\n */\n\n\n_c3 = Tab;\n\nfunction TabContent(_ref3) {\n  _s2();\n\n  let {\n    item\n  } = _ref3;\n  const [showDetails, setShowDetails] = useState(true); // State to toggle visibility of details.\n\n  const [likes, setLikes] = useState(0); // State to track likes.\n\n  function handleInc() {\n    setLikes(likes + 1); // Increment likes.\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: item.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), showDetails && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDetails(h => !h),\n        children: [showDetails ? \"Hide\" : \"Show\", \" details\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hearts-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [likes, \" \\u2764\\uFE0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleInc,\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n/**\n * DifferentContent component to display alternative content for non-existent tabs.\n */\n\n\n_s2(TabContent, \"L4QlU2nUWAZCHCqTuQFECdsjoHs=\");\n\n_c4 = TabContent;\n\nfunction DifferentContent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-content\",\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"I'm a DIFFERENT tab, so I reset state \\uD83D\\uDCA3\\uD83D\\uDCA5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = DifferentContent;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Tabbed\");\n$RefreshReg$(_c3, \"Tab\");\n$RefreshReg$(_c4, \"TabContent\");\n$RefreshReg$(_c5, \"DifferentContent\");","map":{"version":3,"names":["useState","content","summary","details","App","Tabbed","activeTab","setActiveTab","map","_","idx","Tab","num","onClick","TabContent","item","showDetails","setShowDetails","likes","setLikes","handleInc","h","DifferentContent"],"sources":["/Users/evanduru/Library/Mobile Documents/com~apple~CloudDocs/jonas_udemy_react_course_2024/ultimate-react-course-main/how-react-works/starter/src/App.js"],"sourcesContent":["// Importing the useState hook from React for state management within components.\nimport { useState } from \"react\";\n\n// Sample content to be used within the tabbed interface.\nconst content = [\n  {\n    summary: \"React is a library for building UIs\",\n    details:\n      \"Dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n  },\n  {\n    summary: \"State management is like giving state a home\",\n    details:\n      \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n  },\n  {\n    summary: \"We can think of props as the component API\",\n    details:\n      \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n  },\n];\n\n/**\n * App component serves as the root component for the tabbed application.\n * It renders the Tabbed component and passes the content as props.\n */\nexport default function App() {\n  return (\n    <div>\n      <Tabbed content={content} />\n    </div>\n  );\n}\n\n/**\n * Tabbed component responsible for rendering the tabs and the content.\n * @param {Object[]} content - Array of objects containing summary and details for each tab.\n */\nfunction Tabbed({ content }) {\n  const [activeTab, setActiveTab] = useState(0); // State to track the active tab.\n\n  return (\n    <div>\n      <div className=\"tabs\">\n        {content.map((_, idx) => (\n          <Tab key={idx} num={idx} activeTab={activeTab} onClick={setActiveTab} />\n        ))}\n      </div>\n\n      {activeTab <= 2 ? (\n        <TabContent item={content[activeTab]} />\n      ) : (\n        <DifferentContent />\n      )}\n    </div>\n  );\n}\n\n/**\n * Tab component rendering individual tabs.\n * @param {number} num - The index of the tab.\n * @param {number} activeTab - Index of the currently active tab.\n * @param {Function} onClick - Handler to set the active tab.\n */\nfunction Tab({ num, activeTab, onClick }) {\n  return (\n    <button\n      className={activeTab === num ? \"tab active\" : \"tab\"}\n      onClick={() => onClick(num)}\n    >\n      Tab {num + 1}\n    </button>\n  );\n}\n\n/**\n * TabContent component renders the content of a tab.\n * @param {Object} item - The content item containing summary and details.\n */\nfunction TabContent({ item }) {\n  const [showDetails, setShowDetails] = useState(true); // State to toggle visibility of details.\n  const [likes, setLikes] = useState(0); // State to track likes.\n\n  function handleInc() {\n    setLikes(likes + 1); // Increment likes.\n  }\n\n  return (\n    <div className=\"tab-content\">\n      <h4>{item.summary}</h4>\n      {showDetails && <p>{item.details}</p>}\n\n      <div className=\"tab-actions\">\n        <button onClick={() => setShowDetails((h) => !h)}>\n          {showDetails ? \"Hide\" : \"Show\"} details\n        </button>\n\n        <div className=\"hearts-counter\">\n          <span>{likes} ❤️</span>\n          <button onClick={handleInc}>Like</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * DifferentContent component to display alternative content for non-existent tabs.\n */\nfunction DifferentContent() {\n  return (\n    <div className=\"tab-content\">\n      <h4>I'm a DIFFERENT tab, so I reset state 💣💥</h4>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}